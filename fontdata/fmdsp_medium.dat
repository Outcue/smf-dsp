static constexpr unsigned font_width = 6;
static constexpr unsigned font_height = 8;
static const Font_Glyph font_glyphs[] = {
    {0x0021, 1, (const unsigned short[]){0x20, 0x20, 0x20, 0x20, 0x00, 0x20, 0x20, 0x00}}, // ! EXCLAMATION MARK
    {0x0022, 1, (const unsigned short[]){0x50, 0x50, 0xA0, 0x00, 0x00, 0x00, 0x00, 0x00}}, // " QUOTATION MARK
    {0x0023, 1, (const unsigned short[]){0x50, 0x50, 0xF8, 0x50, 0xF8, 0x50, 0x50, 0x00}}, // # NUMBER SIGN
    {0x0024, 1, (const unsigned short[]){0x20, 0x78, 0xA0, 0x70, 0x28, 0xF0, 0x20, 0x00}}, // $ DOLLAR SIGN
    {0x0025, 1, (const unsigned short[]){0x48, 0xA8, 0x50, 0x20, 0x50, 0xA8, 0x90, 0x00}}, // % PERCENT SIGN
    {0x0026, 1, (const unsigned short[]){0x60, 0x90, 0xA0, 0x40, 0xA8, 0x90, 0x68, 0x00}}, // & AMPERSAND
    {0x0027, 1, (const unsigned short[]){0x20, 0x20, 0x40, 0x00, 0x00, 0x00, 0x00, 0x00}}, // ' APOSTROPHE
    {0x0028, 1, (const unsigned short[]){0x10, 0x20, 0x40, 0x40, 0x40, 0x20, 0x10, 0x00}}, // ( LEFT PARENTHESIS
    {0x0029, 1, (const unsigned short[]){0x80, 0x40, 0x20, 0x20, 0x20, 0x40, 0x80, 0x00}}, // ) RIGHT PARENTHESIS
    {0x002A, 1, (const unsigned short[]){0x00, 0xA8, 0x70, 0x20, 0x70, 0xA8, 0x00, 0x00}}, // * ASTERISK
    {0x002B, 1, (const unsigned short[]){0x00, 0x20, 0x20, 0xF8, 0x20, 0x20, 0x00, 0x00}}, // + PLUS SIGN
    {0x002C, 1, (const unsigned short[]){0x00, 0x00, 0x00, 0x00, 0x60, 0x60, 0x20, 0x40}}, // , COMMA
    {0x002D, 1, (const unsigned short[]){0x00, 0x00, 0x00, 0xF8, 0x00, 0x00, 0x00, 0x00}}, // - HYPHEN-MINUS
    {0x002E, 1, (const unsigned short[]){0x00, 0x00, 0x00, 0x00, 0x00, 0x60, 0x60, 0x00}}, // . FULL STOP
    {0x002F, 1, (const unsigned short[]){0x10, 0x10, 0x20, 0x20, 0x20, 0x40, 0x40, 0x00}}, // / SOLIDUS
    {0x0030, 1, (const unsigned short[]){0x70, 0x88, 0x98, 0xA8, 0xC8, 0x88, 0x70, 0x00}}, // 0 DIGIT ZERO
    {0x0031, 1, (const unsigned short[]){0x20, 0x60, 0x20, 0x20, 0x20, 0x20, 0x70, 0x00}}, // 1 DIGIT ONE
    {0x0032, 1, (const unsigned short[]){0x70, 0x88, 0x08, 0x10, 0x20, 0x40, 0xF8, 0x00}}, // 2 DIGIT TWO
    {0x0033, 1, (const unsigned short[]){0x70, 0x88, 0x08, 0x30, 0x08, 0x88, 0x70, 0x00}}, // 3 DIGIT THREE
    {0x0034, 1, (const unsigned short[]){0x10, 0x30, 0x50, 0x90, 0xF8, 0x10, 0x10, 0x00}}, // 4 DIGIT FOUR
    {0x0035, 1, (const unsigned short[]){0xF8, 0x80, 0x80, 0xF0, 0x08, 0x88, 0x70, 0x00}}, // 5 DIGIT FIVE
    {0x0036, 1, (const unsigned short[]){0x70, 0x80, 0x80, 0xF0, 0x88, 0x88, 0x70, 0x00}}, // 6 DIGIT SIX
    {0x0037, 1, (const unsigned short[]){0xF8, 0x08, 0x10, 0x20, 0x20, 0x20, 0x20, 0x00}}, // 7 DIGIT SEVEN
    {0x0038, 1, (const unsigned short[]){0x70, 0x88, 0x88, 0x70, 0x88, 0x88, 0x70, 0x00}}, // 8 DIGIT EIGHT
    {0x0039, 1, (const unsigned short[]){0x70, 0x88, 0x88, 0x78, 0x08, 0x88, 0x70, 0x00}}, // 9 DIGIT NINE
    {0x003A, 1, (const unsigned short[]){0x00, 0x30, 0x30, 0x00, 0x30, 0x30, 0x00, 0x00}}, // : COLON
    {0x003B, 1, (const unsigned short[]){0x00, 0x30, 0x30, 0x00, 0x30, 0x30, 0x10, 0x20}}, // ; SEMICOLON
    {0x003C, 1, (const unsigned short[]){0x08, 0x10, 0x20, 0x40, 0x20, 0x10, 0x08, 0x00}}, // < LESS-THAN SIGN
    {0x003D, 1, (const unsigned short[]){0x00, 0x00, 0xF8, 0x00, 0xF8, 0x00, 0x00, 0x00}}, // = EQUALS SIGN
    {0x003E, 1, (const unsigned short[]){0x80, 0x40, 0x20, 0x10, 0x20, 0x40, 0x80, 0x00}}, // > GREATER-THAN SIGN
    {0x003F, 1, (const unsigned short[]){0x70, 0x88, 0x88, 0x10, 0x20, 0x00, 0x20, 0x00}}, // ? QUESTION MARK
    {0x0040, 1, (const unsigned short[]){0x70, 0x88, 0x98, 0xA8, 0x98, 0x80, 0x78, 0x00}}, // @ COMMERCIAL AT
    {0x0041, 1, (const unsigned short[]){0x70, 0x88, 0x88, 0x88, 0xF8, 0x88, 0x88, 0x00}}, // A LATIN CAPITAL LETTER A
    {0x0042, 1, (const unsigned short[]){0xF0, 0x88, 0x88, 0xF0, 0x88, 0x88, 0xF0, 0x00}}, // B LATIN CAPITAL LETTER B
    {0x0043, 1, (const unsigned short[]){0x70, 0x88, 0x80, 0x80, 0x80, 0x88, 0x70, 0x00}}, // C LATIN CAPITAL LETTER C
    {0x0044, 1, (const unsigned short[]){0xF0, 0x88, 0x88, 0x88, 0x88, 0x88, 0xF0, 0x00}}, // D LATIN CAPITAL LETTER D
    {0x0045, 1, (const unsigned short[]){0x78, 0x80, 0x80, 0xF0, 0x80, 0x80, 0x78, 0x00}}, // E LATIN CAPITAL LETTER E
    {0x0046, 1, (const unsigned short[]){0x78, 0x80, 0x80, 0xF0, 0x80, 0x80, 0x80, 0x00}}, // F LATIN CAPITAL LETTER F
    {0x0047, 1, (const unsigned short[]){0x78, 0x80, 0x80, 0xB8, 0x88, 0x88, 0x78, 0x00}}, // G LATIN CAPITAL LETTER G
    {0x0048, 1, (const unsigned short[]){0x88, 0x88, 0x88, 0xF8, 0x88, 0x88, 0x88, 0x00}}, // H LATIN CAPITAL LETTER H
    {0x0049, 1, (const unsigned short[]){0x70, 0x20, 0x20, 0x20, 0x20, 0x20, 0x70, 0x00}}, // I LATIN CAPITAL LETTER I
    {0x004A, 1, (const unsigned short[]){0x08, 0x08, 0x08, 0x08, 0x88, 0x88, 0x70, 0x00}}, // J LATIN CAPITAL LETTER J
    {0x004B, 1, (const unsigned short[]){0x88, 0x90, 0xA0, 0xC0, 0xA0, 0x90, 0x88, 0x00}}, // K LATIN CAPITAL LETTER K
    {0x004C, 1, (const unsigned short[]){0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x78, 0x00}}, // L LATIN CAPITAL LETTER L
    {0x004D, 1, (const unsigned short[]){0x88, 0xD8, 0xA8, 0x88, 0x88, 0x88, 0x88, 0x00}}, // M LATIN CAPITAL LETTER M
    {0x004E, 1, (const unsigned short[]){0x88, 0xC8, 0xA8, 0x98, 0x88, 0x88, 0x88, 0x00}}, // N LATIN CAPITAL LETTER N
    {0x004F, 1, (const unsigned short[]){0x70, 0x88, 0x88, 0x88, 0x88, 0x88, 0x70, 0x00}}, // O LATIN CAPITAL LETTER O
    {0x0050, 1, (const unsigned short[]){0xF0, 0x88, 0x88, 0x88, 0xF0, 0x80, 0x80, 0x00}}, // P LATIN CAPITAL LETTER P
    {0x0051, 1, (const unsigned short[]){0x70, 0x88, 0x88, 0x88, 0xA8, 0x90, 0x68, 0x00}}, // Q LATIN CAPITAL LETTER Q
    {0x0052, 1, (const unsigned short[]){0xF0, 0x88, 0x88, 0x90, 0xE0, 0x90, 0x88, 0x00}}, // R LATIN CAPITAL LETTER R
    {0x0053, 1, (const unsigned short[]){0x78, 0x80, 0x80, 0x70, 0x08, 0x08, 0xF0, 0x00}}, // S LATIN CAPITAL LETTER S
    {0x0054, 1, (const unsigned short[]){0xF8, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x00}}, // T LATIN CAPITAL LETTER T
    {0x0055, 1, (const unsigned short[]){0x88, 0x88, 0x88, 0x88, 0x88, 0x88, 0x70, 0x00}}, // U LATIN CAPITAL LETTER U
    {0x0056, 1, (const unsigned short[]){0x88, 0x88, 0x88, 0x88, 0x88, 0x50, 0x20, 0x00}}, // V LATIN CAPITAL LETTER V
    {0x0057, 1, (const unsigned short[]){0x88, 0xA8, 0xA8, 0xA8, 0xA8, 0xA8, 0x50, 0x00}}, // W LATIN CAPITAL LETTER W
    {0x0058, 1, (const unsigned short[]){0x88, 0x88, 0x50, 0x20, 0x50, 0x88, 0x88, 0x00}}, // X LATIN CAPITAL LETTER X
    {0x0059, 1, (const unsigned short[]){0x88, 0x88, 0x50, 0x20, 0x20, 0x20, 0x20, 0x00}}, // Y LATIN CAPITAL LETTER Y
    {0x005A, 1, (const unsigned short[]){0xF8, 0x08, 0x10, 0x20, 0x40, 0x80, 0xF8, 0x00}}, // Z LATIN CAPITAL LETTER Z
    {0x005B, 1, (const unsigned short[]){0x30, 0x20, 0x20, 0x20, 0x20, 0x20, 0x30, 0x00}}, // [ LEFT SQUARE BRACKET
    {0x005D, 1, (const unsigned short[]){0x60, 0x20, 0x20, 0x20, 0x20, 0x20, 0x60, 0x00}}, // ] RIGHT SQUARE BRACKET
    {0x005E, 1, (const unsigned short[]){0x40, 0xA0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}}, // ^ CIRCUMFLEX ACCENT
    {0x005F, 1, (const unsigned short[]){0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xF8, 0x00}}, // _ LOW LINE
    {0x0060, 1, (const unsigned short[]){0x40, 0x40, 0x20, 0x00, 0x00, 0x00, 0x00, 0x00}}, // ` GRAVE ACCENT
    {0x0061, 1, (const unsigned short[]){0x70, 0x88, 0x88, 0x88, 0xF8, 0x88, 0x88, 0x00}}, // a LATIN SMALL LETTER A
    {0x0062, 1, (const unsigned short[]){0xF0, 0x88, 0x88, 0xF0, 0x88, 0x88, 0xF0, 0x00}}, // b LATIN SMALL LETTER B
    {0x0063, 1, (const unsigned short[]){0x70, 0x88, 0x80, 0x80, 0x80, 0x88, 0x70, 0x00}}, // c LATIN SMALL LETTER C
    {0x0064, 1, (const unsigned short[]){0xF0, 0x88, 0x88, 0x88, 0x88, 0x88, 0xF0, 0x00}}, // d LATIN SMALL LETTER D
    {0x0065, 1, (const unsigned short[]){0x78, 0x80, 0x80, 0xF0, 0x80, 0x80, 0x78, 0x00}}, // e LATIN SMALL LETTER E
    {0x0066, 1, (const unsigned short[]){0x78, 0x80, 0x80, 0xF0, 0x80, 0x80, 0x80, 0x00}}, // f LATIN SMALL LETTER F
    {0x0067, 1, (const unsigned short[]){0x78, 0x80, 0x80, 0xB8, 0x88, 0x88, 0x78, 0x00}}, // g LATIN SMALL LETTER G
    {0x0068, 1, (const unsigned short[]){0x88, 0x88, 0x88, 0xF8, 0x88, 0x88, 0x88, 0x00}}, // h LATIN SMALL LETTER H
    {0x0069, 1, (const unsigned short[]){0x70, 0x20, 0x20, 0x20, 0x20, 0x20, 0x70, 0x00}}, // i LATIN SMALL LETTER I
    {0x006A, 1, (const unsigned short[]){0x08, 0x08, 0x08, 0x08, 0x88, 0x88, 0x70, 0x00}}, // j LATIN SMALL LETTER J
    {0x006B, 1, (const unsigned short[]){0x88, 0x90, 0xA0, 0xC0, 0xA0, 0x90, 0x88, 0x00}}, // k LATIN SMALL LETTER K
    {0x006C, 1, (const unsigned short[]){0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x78, 0x00}}, // l LATIN SMALL LETTER L
    {0x006D, 1, (const unsigned short[]){0x88, 0xD8, 0xA8, 0x88, 0x88, 0x88, 0x88, 0x00}}, // m LATIN SMALL LETTER M
    {0x006E, 1, (const unsigned short[]){0x88, 0xC8, 0xA8, 0x98, 0x88, 0x88, 0x88, 0x00}}, // n LATIN SMALL LETTER N
    {0x006F, 1, (const unsigned short[]){0x70, 0x88, 0x88, 0x88, 0x88, 0x88, 0x70, 0x00}}, // o LATIN SMALL LETTER O
    {0x0070, 1, (const unsigned short[]){0xF0, 0x88, 0x88, 0x88, 0xF0, 0x80, 0x80, 0x00}}, // p LATIN SMALL LETTER P
    {0x0071, 1, (const unsigned short[]){0x70, 0x88, 0x88, 0x88, 0xA8, 0x90, 0x68, 0x00}}, // q LATIN SMALL LETTER Q
    {0x0072, 1, (const unsigned short[]){0xF0, 0x88, 0x88, 0x90, 0xE0, 0x90, 0x88, 0x00}}, // r LATIN SMALL LETTER R
    {0x0073, 1, (const unsigned short[]){0x78, 0x80, 0x80, 0x70, 0x08, 0x08, 0xF0, 0x00}}, // s LATIN SMALL LETTER S
    {0x0074, 1, (const unsigned short[]){0xF8, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x00}}, // t LATIN SMALL LETTER T
    {0x0075, 1, (const unsigned short[]){0x88, 0x88, 0x88, 0x88, 0x88, 0x88, 0x70, 0x00}}, // u LATIN SMALL LETTER U
    {0x0076, 1, (const unsigned short[]){0x88, 0x88, 0x88, 0x88, 0x88, 0x50, 0x20, 0x00}}, // v LATIN SMALL LETTER V
    {0x0077, 1, (const unsigned short[]){0x88, 0xA8, 0xA8, 0xA8, 0xA8, 0xA8, 0x50, 0x00}}, // w LATIN SMALL LETTER W
    {0x0078, 1, (const unsigned short[]){0x88, 0x88, 0x50, 0x20, 0x50, 0x88, 0x88, 0x00}}, // x LATIN SMALL LETTER X
    {0x0079, 1, (const unsigned short[]){0x88, 0x88, 0x50, 0x20, 0x20, 0x20, 0x20, 0x00}}, // y LATIN SMALL LETTER Y
    {0x007A, 1, (const unsigned short[]){0xF8, 0x08, 0x10, 0x20, 0x40, 0x80, 0xF8, 0x00}}, // z LATIN SMALL LETTER Z
    {0x007B, 1, (const unsigned short[]){0x10, 0x20, 0x20, 0x40, 0x20, 0x20, 0x10, 0x00}}, // { LEFT CURLY BRACKET
    {0x007C, 1, (const unsigned short[]){0x20, 0x20, 0x20, 0x00, 0x20, 0x20, 0x20, 0x00}}, // | VERTICAL LINE
    {0x007D, 1, (const unsigned short[]){0x40, 0x20, 0x20, 0x10, 0x20, 0x20, 0x40, 0x00}}, // } RIGHT CURLY BRACKET
    {0x00A5, 1, (const unsigned short[]){0x40, 0x40, 0x20, 0x20, 0x20, 0x10, 0x10, 0x00}}, // ¥ YEN SIGN
    {0x203E, 1, (const unsigned short[]){0x40, 0xA8, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00}}, // ‾ OVERLINE
    {0xFF61, 1, (const unsigned short[]){0x00, 0x00, 0x00, 0x00, 0x40, 0xA0, 0x40, 0x00}}, // ｡ HALFWIDTH IDEOGRAPHIC FULL STOP
    {0xFF62, 1, (const unsigned short[]){0x70, 0x40, 0x40, 0x40, 0x00, 0x00, 0x00, 0x00}}, // ｢ HALFWIDTH LEFT CORNER BRACKET
    {0xFF63, 1, (const unsigned short[]){0x00, 0x00, 0x00, 0x10, 0x10, 0x10, 0x70, 0x00}}, // ｣ HALFWIDTH RIGHT CORNER BRACKET
    {0xFF64, 1, (const unsigned short[]){0x00, 0x00, 0x00, 0x00, 0x00, 0x80, 0x40, 0x00}}, // ､ HALFWIDTH IDEOGRAPHIC COMMA
    {0xFF65, 1, (const unsigned short[]){0x00, 0x00, 0x00, 0x60, 0x60, 0x00, 0x00, 0x00}}, // ･ HALFWIDTH KATAKANA MIDDLE DOT
    {0xFF66, 1, (const unsigned short[]){0xF8, 0x08, 0xF8, 0x08, 0x08, 0x10, 0xE0, 0x00}}, // ｦ HALFWIDTH KATAKANA LETTER WO
    {0xFF67, 1, (const unsigned short[]){0x00, 0x00, 0xF0, 0x10, 0x60, 0x40, 0x80, 0x00}}, // ｧ HALFWIDTH KATAKANA LETTER SMALL A
    {0xFF68, 1, (const unsigned short[]){0x00, 0x00, 0x10, 0x20, 0xE0, 0x20, 0x20, 0x00}}, // ｨ HALFWIDTH KATAKANA LETTER SMALL I
    {0xFF69, 1, (const unsigned short[]){0x00, 0x00, 0x20, 0xF8, 0x88, 0x10, 0x20, 0x00}}, // ｩ HALFWIDTH KATAKANA LETTER SMALL U
    {0xFF6A, 1, (const unsigned short[]){0x00, 0x00, 0x00, 0x70, 0x20, 0x20, 0xF8, 0x00}}, // ｪ HALFWIDTH KATAKANA LETTER SMALL E
    {0xFF6B, 1, (const unsigned short[]){0x00, 0x00, 0x10, 0xF8, 0x30, 0x50, 0x90, 0x00}}, // ｫ HALFWIDTH KATAKANA LETTER SMALL O
    {0xFF6C, 1, (const unsigned short[]){0x00, 0x00, 0x40, 0xF8, 0x48, 0x50, 0x40, 0x00}}, // ｬ HALFWIDTH KATAKANA LETTER SMALL YA
    {0xFF6D, 1, (const unsigned short[]){0x00, 0x00, 0x00, 0x70, 0x10, 0x10, 0xF8, 0x00}}, // ｭ HALFWIDTH KATAKANA LETTER SMALL YU
    {0xFF6E, 1, (const unsigned short[]){0x00, 0x00, 0xF0, 0x10, 0xF0, 0x10, 0xF0, 0x00}}, // ｮ HALFWIDTH KATAKANA LETTER SMALL YO
    {0xFF6F, 1, (const unsigned short[]){0x00, 0x00, 0xA8, 0xA8, 0x08, 0x10, 0x60, 0x00}}, // ｯ HALFWIDTH KATAKANA LETTER SMALL TU
    {0xFF70, 1, (const unsigned short[]){0x00, 0x00, 0x00, 0x00, 0x70, 0x00, 0x00, 0x00}}, // ｰ HALFWIDTH KATAKANA-HIRAGANA PROLONGED SOUND MARK
    {0xFF71, 1, (const unsigned short[]){0xF8, 0x08, 0x28, 0x30, 0x20, 0x40, 0x80, 0x00}}, // ｱ HALFWIDTH KATAKANA LETTER A
    {0xFF72, 1, (const unsigned short[]){0x08, 0x10, 0x20, 0x60, 0xA0, 0x20, 0x20, 0x00}}, // ｲ HALFWIDTH KATAKANA LETTER I
    {0xFF73, 1, (const unsigned short[]){0x20, 0xF8, 0x88, 0x08, 0x08, 0x10, 0x60, 0x00}}, // ｳ HALFWIDTH KATAKANA LETTER U
    {0xFF74, 1, (const unsigned short[]){0x00, 0xF8, 0x20, 0x20, 0x20, 0x20, 0xF8, 0x00}}, // ｴ HALFWIDTH KATAKANA LETTER E
    {0xFF75, 1, (const unsigned short[]){0x10, 0xF8, 0x30, 0x30, 0x50, 0x50, 0x90, 0x00}}, // ｵ HALFWIDTH KATAKANA LETTER O
    {0xFF76, 1, (const unsigned short[]){0x20, 0xF8, 0x28, 0x28, 0x48, 0x48, 0x90, 0x00}}, // ｶ HALFWIDTH KATAKANA LETTER KA
    {0xFF77, 1, (const unsigned short[]){0x20, 0xF8, 0x20, 0x20, 0xF8, 0x20, 0x20, 0x00}}, // ｷ HALFWIDTH KATAKANA LETTER KI
    {0xFF78, 1, (const unsigned short[]){0x78, 0x48, 0x48, 0x88, 0x08, 0x10, 0x60, 0x00}}, // ｸ HALFWIDTH KATAKANA LETTER KU
    {0xFF79, 1, (const unsigned short[]){0x40, 0x78, 0x50, 0x90, 0x10, 0x20, 0x40, 0x00}}, // ｹ HALFWIDTH KATAKANA LETTER KE
    {0xFF7A, 1, (const unsigned short[]){0x00, 0xF8, 0x08, 0x08, 0x08, 0x08, 0xF8, 0x00}}, // ｺ HALFWIDTH KATAKANA LETTER KO
    {0xFF7B, 1, (const unsigned short[]){0x50, 0xF8, 0x50, 0x50, 0x10, 0x20, 0xC0, 0x00}}, // ｻ HALFWIDTH KATAKANA LETTER SA
    {0xFF7C, 1, (const unsigned short[]){0x48, 0x28, 0x88, 0x48, 0x08, 0x10, 0xE0, 0x00}}, // ｼ HALFWIDTH KATAKANA LETTER SI
    {0xFF7D, 1, (const unsigned short[]){0xF8, 0x08, 0x08, 0x10, 0x20, 0x50, 0x88, 0x00}}, // ｽ HALFWIDTH KATAKANA LETTER SU
    {0xFF7E, 1, (const unsigned short[]){0x40, 0xF8, 0x48, 0x50, 0x40, 0x40, 0x38, 0x00}}, // ｾ HALFWIDTH KATAKANA LETTER SE
    {0xFF7F, 1, (const unsigned short[]){0x88, 0x88, 0x48, 0x08, 0x08, 0x10, 0xE0, 0x00}}, // ｿ HALFWIDTH KATAKANA LETTER SO
    {0xFF80, 1, (const unsigned short[]){0x78, 0x48, 0xC8, 0x28, 0x10, 0x20, 0xC0, 0x00}}, // ﾀ HALFWIDTH KATAKANA LETTER TA
    {0xFF81, 1, (const unsigned short[]){0x10, 0x60, 0x20, 0xF8, 0x20, 0x40, 0x80, 0x00}}, // ﾁ HALFWIDTH KATAKANA LETTER TI
    {0xFF82, 1, (const unsigned short[]){0xA8, 0xA8, 0xA8, 0x08, 0x08, 0x10, 0xE0, 0x00}}, // ﾂ HALFWIDTH KATAKANA LETTER TU
    {0xFF83, 1, (const unsigned short[]){0xF8, 0x00, 0xF8, 0x20, 0x20, 0x40, 0x80, 0x00}}, // ﾃ HALFWIDTH KATAKANA LETTER TE
    {0xFF85, 1, (const unsigned short[]){0x20, 0xF8, 0x20, 0x20, 0x20, 0x40, 0x80, 0x00}}, // ﾅ HALFWIDTH KATAKANA LETTER NA
    {0xFF86, 1, (const unsigned short[]){0x00, 0x70, 0x00, 0x00, 0x00, 0x00, 0xF8, 0x00}}, // ﾆ HALFWIDTH KATAKANA LETTER NI
    {0xFF87, 1, (const unsigned short[]){0xF8, 0x08, 0x08, 0x50, 0x20, 0x50, 0x88, 0x00}}, // ﾇ HALFWIDTH KATAKANA LETTER NU
    {0xFF88, 1, (const unsigned short[]){0x20, 0xF8, 0x10, 0x20, 0x70, 0xA8, 0x20, 0x00}}, // ﾈ HALFWIDTH KATAKANA LETTER NE
    {0xFF89, 1, (const unsigned short[]){0x10, 0x10, 0x10, 0x10, 0x20, 0x20, 0x40, 0x00}}, // ﾉ HALFWIDTH KATAKANA LETTER NO
    {0xFF8A, 1, (const unsigned short[]){0x50, 0x50, 0x50, 0x88, 0x88, 0x88, 0x88, 0x00}}, // ﾊ HALFWIDTH KATAKANA LETTER HA
    {0xFF8B, 1, (const unsigned short[]){0x80, 0xF8, 0x80, 0x80, 0x80, 0x40, 0x38, 0x00}}, // ﾋ HALFWIDTH KATAKANA LETTER HI
    {0xFF8C, 1, (const unsigned short[]){0xF8, 0x08, 0x08, 0x08, 0x08, 0x10, 0x60, 0x00}}, // ﾌ HALFWIDTH KATAKANA LETTER HU
    {0xFF8D, 1, (const unsigned short[]){0x00, 0x40, 0xA0, 0x90, 0x08, 0x00, 0x00, 0x00}}, // ﾍ HALFWIDTH KATAKANA LETTER HE
    {0xFF8E, 1, (const unsigned short[]){0x20, 0xF8, 0x20, 0xA8, 0xA8, 0xA8, 0x20, 0x00}}, // ﾎ HALFWIDTH KATAKANA LETTER HO
    {0xFF8F, 1, (const unsigned short[]){0xF8, 0x08, 0x10, 0xA0, 0x40, 0x20, 0x10, 0x00}}, // ﾏ HALFWIDTH KATAKANA LETTER MA
    {0xFF90, 1, (const unsigned short[]){0x70, 0x08, 0x70, 0x08, 0x00, 0x70, 0x08, 0x00}}, // ﾐ HALFWIDTH KATAKANA LETTER MI
    {0xFF91, 1, (const unsigned short[]){0x20, 0x20, 0x40, 0x40, 0x88, 0x88, 0xF8, 0x00}}, // ﾑ HALFWIDTH KATAKANA LETTER MU
    {0xFF92, 1, (const unsigned short[]){0x08, 0x08, 0x48, 0x30, 0x10, 0x28, 0xC0, 0x00}}, // ﾒ HALFWIDTH KATAKANA LETTER ME
    {0xFF93, 1, (const unsigned short[]){0xF8, 0x40, 0x40, 0xF8, 0x40, 0x40, 0x38, 0x00}}, // ﾓ HALFWIDTH KATAKANA LETTER MO
    {0xFF94, 1, (const unsigned short[]){0x40, 0xF8, 0x48, 0x40, 0x20, 0x20, 0x10, 0x00}}, // ﾔ HALFWIDTH KATAKANA LETTER YA
    {0xFF95, 1, (const unsigned short[]){0xF0, 0x10, 0x10, 0x10, 0x10, 0x10, 0xF8, 0x00}}, // ﾕ HALFWIDTH KATAKANA LETTER YU
    {0xFF96, 1, (const unsigned short[]){0xF8, 0x08, 0x08, 0x78, 0x08, 0x08, 0xF8, 0x00}}, // ﾖ HALFWIDTH KATAKANA LETTER YO
    {0xFF97, 1, (const unsigned short[]){0xF8, 0x00, 0xF8, 0x08, 0x08, 0x10, 0x60, 0x00}}, // ﾗ HALFWIDTH KATAKANA LETTER RA
    {0xFF98, 1, (const unsigned short[]){0x48, 0x48, 0x48, 0x48, 0x08, 0x10, 0x60, 0x00}}, // ﾘ HALFWIDTH KATAKANA LETTER RI
    {0xFF99, 1, (const unsigned short[]){0xA0, 0xA0, 0xA0, 0xA0, 0xA0, 0xA8, 0xB0, 0x00}}, // ﾙ HALFWIDTH KATAKANA LETTER RU
    {0xFF9A, 1, (const unsigned short[]){0x80, 0x80, 0x80, 0x88, 0x90, 0xA0, 0xC0, 0x00}}, // ﾚ HALFWIDTH KATAKANA LETTER RE
    {0xFF9B, 1, (const unsigned short[]){0xF8, 0x88, 0x88, 0x88, 0x88, 0x88, 0xF8, 0x00}}, // ﾛ HALFWIDTH KATAKANA LETTER RO
    {0xFF9C, 1, (const unsigned short[]){0xF8, 0x88, 0x08, 0x08, 0x08, 0x10, 0x60, 0x00}}, // ﾜ HALFWIDTH KATAKANA LETTER WA
    {0xFF9D, 1, (const unsigned short[]){0xC8, 0x28, 0x08, 0x08, 0x08, 0x10, 0xE0, 0x00}}, // ﾝ HALFWIDTH KATAKANA LETTER N
    {0xFF9E, 1, (const unsigned short[]){0xA0, 0x50, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}}, // ﾞ HALFWIDTH KATAKANA VOICED SOUND MARK
    {0xFF9F, 1, (const unsigned short[]){0xE0, 0xA0, 0xE0, 0x00, 0x00, 0x00, 0x00, 0x00}}, // ﾟ HALFWIDTH KATAKANA SEMI-VOICED SOUND MARK
};
