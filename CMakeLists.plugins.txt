# -*- mode: cmake; -*-

function(add_plugin TARGET)
  add_library("${TARGET}" MODULE ${ARGN})
  set_target_properties("${TARGET}" PROPERTIES PREFIX "")
  install(TARGETS "${TARGET}"
    LIBRARY DESTINATION "lib/${PROJECT_NAME}"
    COMPONENT "plugins")
endfunction()

if(FALSE) # unstable
if(TARGET sys::fluidsynth)
  add_plugin(s_fluid
    "sources/synth/plugins/fluid.cc"
    "sources/synth/synth_utility.cc"
    "sources/utility/paths.cc"
    "sources/utility/logs.cc")
  target_include_directories(s_fluid PRIVATE "sources")
  target_link_libraries(s_fluid PRIVATE sys::fluidsynth vendor::gsl-lite)
endif()
endif()

if(TARGET vendor::adlmidi)
  add_plugin(s_adlmidi
    "sources/synth/plugins/adlmidi.cc"
    "sources/utility/paths.cc"
    "sources/utility/logs.cc")
  target_include_directories(s_adlmidi PRIVATE "sources")
  target_link_libraries(s_adlmidi PRIVATE vendor::adlmidi vendor::gsl-lite)
endif()

if(TARGET vendor::opnmidi)
  add_plugin(s_opnmidi
    "sources/synth/plugins/opnmidi.cc"
    "sources/utility/paths.cc"
    "sources/utility/logs.cc")
  target_include_directories(s_opnmidi PRIVATE "sources")
  target_link_libraries(s_opnmidi PRIVATE vendor::opnmidi vendor::gsl-lite)
endif()

if(TARGET vendor::scc)
  add_plugin(s_scc
    "sources/synth/plugins/scc.cc"
    "sources/utility/paths.cc"
    "sources/utility/logs.cc")
  target_include_directories(s_scc PRIVATE "sources")
  target_link_libraries(s_scc PRIVATE vendor::scc vendor::gsl-lite)
endif()

if(TARGET vendor::mt32emu)
  add_plugin(s_mt32emu
    "sources/synth/plugins/mt32emu.cc"
    "sources/utility/paths.cc"
    "sources/utility/logs.cc")
  target_include_directories(s_mt32emu PRIVATE "sources")
  target_link_libraries(s_mt32emu PRIVATE vendor::mt32emu vendor::gsl-lite)
endif()
